node {
    
    def hom = AMBIENTE.contains('hom');
    def mvn = tool 'MVN-3.3.9'
    def pom = null

    stage ('Preparando') {
        git branch: 'develop', credentialsId: 'GITLAB', url: '${GIT_URL}'
        pom = readMavenPom file: 'pom.xml'
    }
    
    stage ('Compilando e Testando') {
        sh "${mvn}/bin/mvn clean package -Dmaven.test.skip=true"
    }        
    
    stage ('Preparando a Release') {
        if(hom) {
            echo 'Pulando a Release'
        } else {
            pom = readMavenPom file: 'pom.xml'
        }
    }
    
    stage ('Interrompendo o Container') {
    
        sh 'docker ps > result'
        def result = readFile('result').trim()
        if(result.contains(pom.artifactId)) {
            sh 'docker stop ' + pom.artifactId
        }
        
        sh 'docker ps -a > result'
        result = readFile('result').trim()
        if(result.contains(pom.artifactId)) {
            sh 'docker rm ' + pom.artifactId
        }
        
    }        
    
    stage ('Atualizando a Imagem do Container') {
        sh 'docker build --build-arg BINARY_FILE=target/' + pom.artifactId + '.jar -t ' + pom.artifactId + ':' + pom.version + ' .'
    }        
    
    stage ('Iniciando o Container') {
        sh 'docker volume create ' + pom.artifactId + '-data'
        sh 'docker run --name ' + pom.artifactId + ' -p 8000:8000 -e ENVIRONMENT=prod -v ' + pom.artifactId + '-data:/var/log/java -d ' + pom.artifactId + ':' + pom.version
    }

}